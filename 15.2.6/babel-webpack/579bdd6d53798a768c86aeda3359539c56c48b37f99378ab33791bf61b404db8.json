{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TeaService {\n  constructor() {\n    this.maxId = 3;\n    this.teaList = [{\n      _id: 1,\n      name: 'Mao Jian',\n      category: 'green',\n      source: 'China',\n      notes: 'a classic green with a robust, grassy flavor. Do not oversteep, whatever you do. 175 degrees F, NO HIGHER'\n    }, {\n      _id: 2,\n      name: 'Chai Cascarilla',\n      category: 'black',\n      source: 'MEM Tea',\n      notes: 'delicious blend of cocoa nibs and shells and black tea. Best enjoyed with milk.'\n    }, {\n      _id: 3,\n      name: 'Hairy Crab',\n      category: 'oolong',\n      source: 'MEM Tea',\n      notes: 'a less-oxidized oolong with a complex, leafy flavor. Tastier than the name might suggest... unless you are familiar with the fishy delicacy it is named after from Shanghai. Re-steeps well and is robust to high-temp steeps.'\n    }];\n  }\n  listTeas() {\n    return this.teaList;\n  }\n  getTea(id) {\n    return this.teaList.find(el => {\n      return el._id == id;\n    });\n  }\n  createTea(teaObject) {\n    teaObject._id = ++this.maxId;\n    this.teaList.push(teaObject);\n    return this.getTea(teaObject._id);\n  }\n  updateTea(id, data) {\n    let tea = this.getTea(id);\n    if (tea) {\n      tea = Object.assign(tea, data);\n      return tea;\n    } else {\n      return null;\n    }\n  }\n  deleteTea(id) {\n    let tea = this.getTea(id);\n    if (tea) {\n      this.teaList = this.teaList.filter(el => el._id != id);\n    }\n  }\n}\nTeaService.ɵfac = function TeaService_Factory(t) {\n  return new (t || TeaService)();\n};\nTeaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TeaService,\n  factory: TeaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,UAAU;EA0BrBC;IAzBA,UAAK,GAAU,CAAC;IAChB,YAAO,GAAG,CACR;MACEC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAC,UAAU;MACfC,QAAQ,EAAC,OAAO;MAChBC,MAAM,EAAC,OAAO;MACdC,KAAK,EAAC;KACP,EACD;MACEJ,GAAG,EAAE,CAAC;MACNC,IAAI,EAAC,iBAAiB;MACtBC,QAAQ,EAAC,OAAO;MAChBC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAC;KACP,EACD;MACEJ,GAAG,EAAE,CAAC;MACNC,IAAI,EAAC,YAAY;MACjBC,QAAQ,EAAC,QAAQ;MACjBC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAC;KACP,CACF;EAEe;EAEhBC,QAAQ;IACN,OAAO,IAAI,CAACC,OAAO;EACrB;EAEAC,MAAM,CAACC,EAAS;IACd,OAAO,IAAI,CAACF,OAAO,CAACG,IAAI,CAAEC,EAAE,IAAI;MAAE,OAAOA,EAAE,CAACV,GAAG,IAAIQ,EAAE;IAAA,CAAC,CAAC;EACzD;EAEAG,SAAS,CAACC,SAAa;IACrBA,SAAS,CAACZ,GAAG,GAAG,EAAE,IAAI,CAACa,KAAK;IAC5B,IAAI,CAACP,OAAO,CAACQ,IAAI,CAACF,SAAS,CAAC;IAC5B,OAAO,IAAI,CAACL,MAAM,CAACK,SAAS,CAACZ,GAAG,CAAC;EACnC;EAEAe,SAAS,CAACP,EAAS,EAAEQ,IAAQ;IAC3B,IAAIC,GAAG,GAAG,IAAI,CAACV,MAAM,CAACC,EAAE,CAAC;IACzB,IAAIS,GAAG,EAAC;MACNA,GAAG,GAAGC,MAAM,CAACC,MAAM,CAACF,GAAG,EAAED,IAAI,CAAC;MAC9B,OAAOC,GAAG;KACX,MAAM;MACL,OAAO,IAAI;;EAEf;EAEAG,SAAS,CAACZ,EAAS;IACjB,IAAIS,GAAG,GAAG,IAAI,CAACV,MAAM,CAACC,EAAE,CAAC;IACzB,IAAIS,GAAG,EAAE;MACP,IAAI,CAACX,OAAO,GAAG,IAAI,CAACA,OAAO,CAACe,MAAM,CAACX,EAAE,IAAIA,EAAE,CAACV,GAAG,IAAIQ,EAAE,CAAC;;EAE1D;;AAzDWV,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAwB,SAAVxB,UAAU;EAAAyB,YAFT;AAAM","names":["TeaService","constructor","_id","name","category","source","notes","listTeas","teaList","getTea","id","find","el","createTea","teaObject","maxId","push","updateTea","data","tea","Object","assign","deleteTea","filter","factory","providedIn"],"sourceRoot":"","sources":["/Users/sarahmatthews/Code/harvard-projects/web-app-dev/assigment-6-angular-sarahmatthews3400/hw6-angular-app/src/app/tea.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeaService {\n  maxId:number = 3;\n  teaList = [\n    {\n      _id: 1,\n      name:'Mao Jian',\n      category:'green',\n      source:'China',\n      notes:'a classic green with a robust, grassy flavor. Do not oversteep, whatever you do. 175 degrees F, NO HIGHER'\n    },\n    {\n      _id: 2,\n      name:'Chai Cascarilla',\n      category:'black',\n      source:'MEM Tea',\n      notes:'delicious blend of cocoa nibs and shells and black tea. Best enjoyed with milk.'\n    },\n    {\n      _id: 3,\n      name:'Hairy Crab',\n      category:'oolong',\n      source:'MEM Tea',\n      notes:'a less-oxidized oolong with a complex, leafy flavor. Tastier than the name might suggest... unless you are familiar with the fishy delicacy it is named after from Shanghai. Re-steeps well and is robust to high-temp steeps.'\n    }\n  ];\n\n  constructor() { }\n\n  listTeas():any[]{\n    return this.teaList;\n  }\n\n  getTea(id:number):any{\n    return this.teaList.find((el) => {return el._id == id});\n  }\n\n  createTea(teaObject:any){\n    teaObject._id = ++this.maxId;\n    this.teaList.push(teaObject);\n    return this.getTea(teaObject._id)\n  }\n\n  updateTea(id:number, data:any){\n    let tea = this.getTea(id);\n    if (tea){\n      tea = Object.assign(tea, data);\n      return tea;\n    } else {\n      return null;\n    }\n  }\n\n  deleteTea(id:number) {\n    let tea = this.getTea(id);\n    if (tea) {\n      this.teaList = this.teaList.filter(el => el._id != id);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}